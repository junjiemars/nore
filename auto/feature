
# feature

echo $nm_n "checking for $nm_feature ...$nm_c"

cat << END >> $NM_AUTOCONF_ERR

----------------------------------------
checking for $nm_feature

END

nm_found=no

if test -n "$nm_feature_name"; then
	nm_have_feature=`echo $nm_feature_name | tr '[\-: =]' '_' | tr '[:lower:]' '[:upper:]'`
fi


cat << END > $NM_AUTOTEST.c

#include <sys/types.h>
$nm_feature_h

int main(void) {
    $nm_feature_test;
    return 0;
}

END


nm_test_out="${bin_out}${NM_AUTOTEST}"

nm_test="$CC $nm_feature_flags \
					$nm_feature_inc \
					$nm_test_out $NM_AUTOTEST.c \
					$nm_feature_ldlibs"


`$nm_test >> $NM_AUTOCONF_ERR 2>&1`


if [ -x $NM_AUTOTEST ]; then

  case "$nm_feature_run" in

    yes)

      if `$NM_AUTOTEST >> $NM_AUTOCONF_ERR 2>&1`; then
        echo " found"
        nm_found=yes

        if test -n "$nm_feature_name"; then
          have=$nm_have_feature . ${NM_HOME}auto/have
        fi

      else
        echo " found but is not working"
      fi
    ;;

    value)

      if `$NM_AUTOTEST >> $NM_AUTOCONF_ERR 2>&1`; then
        echo " found"
        nm_found=yes

        cat << END >> $NM_AUTO_H

#ifndef $nm_have_feature
#define $nm_have_feature  `$NM_AUTOTEST`
#endif

END
      else
        echo " found but is not working"
      fi
    ;;

    bug)

      if `$NM_AUTOTEST >> $NM_AUTOCONF_ERR 2>&1`; then
        echo " not found"

      else
        echo " found"
        nm_found=yes

        if test -n "$nm_feature_name"; then
          have=$nm_have_feature . ${NM_HOME}auto/have
        fi
      fi
    ;;

    *)
      echo " found"
      nm_found=yes

      if test -n "$nm_feature_name"; then
        have=$nm_have_feature . ${NM_HOME}auto/have
      fi
    ;;

  esac

else
  echo " not found"

  echo "----------"    >> $NM_AUTOCONF_ERR
  cat $NM_AUTOTEST.c   >> $NM_AUTOCONF_ERR
  echo "----------"    >> $NM_AUTOCONF_ERR
  echo $nm_test        >> $NM_AUTOCONF_ERR
  echo "----------"    >> $NM_AUTOCONF_ERR
fi

rm -rf $NM_AUTOTEST*
[ -f "autotest.obj" ] && rm "autotest.obj"
