
# make


echo
echo "creating $NM_MAKEFILE"

mkdir -p $NM_OUT/bin \
         $NM_OUT/lib \
	       $NM_OUT/inc \
	       $NM_OUT/etc \
	       $NM_OUT/var \
	       $NM_OUT/tmp

asm_out="${auto_out:+$auto_out$NM_OUT/tmp/ }$asm_out"
bin_out="${auto_out:+$auto_out$NM_OUT/tmp/ }$bin_out"


cat << END > $NM_MAKEFILE
# $NM_MAKEFILE ($NM_COMPILER, $NM_PLATFORM)

CC = $CC
CPP = $CPP
CAS = $CAS
AS = $AS
AR = $AR
LINK = $LINK

CPPFLAGS = $CPPFLAGS
CFLAGS += $CFLAGS
ASFLAGS = $ASFLAGS
LDFLAGS += -L$NM_OUT/lib
LDLIBS = $LDLIBS
ARFLAGS = $ARFLAGS
LFLAGS = $LFLAGS
YFLAGS = $YFLAGS

INC += -I$NM_OUT -I$NM_OUT/inc

nm_symbol_opt = $nm_symbol_opt
nm_optimize_opt = $nm_optimize_opt
nm_warn_opt = $nm_warn_opt
nm_error_opt = $nm_error_opt
nm_debug_opt = $nm_debug_opt
nm_std_opt = $nm_std_opt
nm_cpu_opt = $nm_cpu_opt
nm_verbose_opt = $nm_verbose_opt

nm_pic_opt = $nm_pic_opt
nm_shared_opt = $nm_shared_opt

nm_stage_pre = $nm_stage_pre
nm_stage_chk = $nm_stage_chk
nm_stage_asm = $nm_stage_asm
nm_stage_c = $nm_stage_c

# macro define 
nm_def_opt = $nm_def_opt
nm_undef_opt = $nm_undef_opt

# path separator
nm_p = $nm_p

# nore options
NM_SYMBOL = $NM_SYMBOL
NM_OPTIMIZE = $NM_OPTIMIZE
NM_WARN = $NM_WARN
NM_ERROR = $NM_ERROR
NM_DEBUG = $NM_DEBUG
NM_VERBOSE = $NM_VERBOSE
NM_STD = $NM_STD
NM_CPU = $NM_CPU

# platform
NM_SYSTEM = $NM_SYSTEM
NM_RELEASE = $NM_RELEASE
NM_MACHINE = $NM_MACHINE
CC_NAME = $CC_NAME
CC_VER = $CC_VER

# output option
cpp_out = $cpp_out
asm_out = $asm_out
obj_out = $obj_out
lib_out = $bin_out
ar_out = $ar_out
bin_out = $bin_out

# output extension
cpp_ext = $cpp_ext
asm_ext = $asm_ext
obj_ext = $obj_ext
lib_ext = $lib_ext
ar_ext = $ar_ext
bin_ext = $bin_ext


default: build

clean:
	-\$(RM) -r $NM_OUT/bin/*
	-\$(RM) -r $NM_OUT/lib/*
	-\$(RM) -r $NM_OUT/inc/*
	-\$(RM) -r $NM_OUT/etc/*
	-\$(RM) -r $NM_OUT/var/*
	-\$(RM) -r $NM_OUT/tmp/*

END


nm_sticks=()
nm_sticks_build=()
nm_sticks_test=()
nm_src_stick=
nm_stick_norm=

make_stick_path() {
	local src="$1"
	local stick="$2"
	if [ "." = "$stick" ]; then
		echo "$src"
	else
		echo "$src/$stick"
	fi
}

make_stick_norm() {
	local src="$1"
	local stick="$2"
	if [ "." = "$stick" ]; then
		if [ "src" = "`basename $src`" ]; then
			echo "`basename $PWD`"
		else
			echo "`basename $src`"
		fi
	else
		echo "$stick"
	fi
}


# basic paths
cat << END >> $NM_MAKEFILE

root = $NM_SRC/

inc_path=$NM_OUT/inc/
tmp_path=$NM_OUT/tmp/
lib_path=$NM_OUT/lib/
bin_path=$NM_OUT/bin/

END


for stick in ${NM_HAS_STICKS[@]}; do

	nm_src_stick="`make_stick_path $NM_SRC $stick`"
	nm_stick_norm="`make_stick_norm $nm_src_stick $stick`"

	if [ ! -d "$nm_src_stick" ]; then
		echo " + checking for $nm_src_stick ... no found"
		cat << END >> $NM_AUTOCONF_ERR
---------------------------------------
checking for $nm_src_stick ... no found

END
    continue
  fi # end of -d stick

  if [ -f $nm_src_stick/version ]; then
		echo " + checking for $nm_src_stick/version ... found"
    have=`echo $nm_stick_norm | tr '[:lower:]' '[:upper:]'`_VERSION \
    value=`cat $nm_src_stick/version` . ${NM_HOME}auto/define
	fi
  
	if [ -f $nm_src_stick/configure ]; then
		echo " + checking for $nm_src_stick/configure ... found"
		. $nm_src_stick/configure
	fi
  
	if [ -f $nm_src_stick/Makefile.$CC_NAME ]; then
		stick_makefile=$nm_src_stick/Makefile.$CC_NAME
		echo " + checking for $nm_src_stick/Makefile.$CC_NAME ... found"

	elif [ -f $nm_src_stick/Makefile.$NM_SYSTEM ]; then
		stick_makefile=$nm_src_stick/Makefile.$NM_SYSTEM
		echo " + checking for $nm_src_stick/Makefile.$NM_SYSTEM ... found"

	elif [ -f $nm_src_stick/Makefile ]; then
		stick_makefile=$nm_src_stick/Makefile
		echo " + checking for $nm_src_stick/Makefile ... found"
	else

		echo " + checking for $nm_src_stick/Makefile ... no found"
		cat << END >> $NM_AUTOCONF_ERR

----------------------------------------
checking for $nm_src_stick/Makefile no found

END
		continue	
	fi # end of -f Makefile

  nm_sticks+=("$stick")
	nm_sticks_build+=("$nm_stick_norm")
	nm_sticks_test+=("`make_stick_norm $nm_src_stick $stick`_test")
		
	cat << END >> $NM_MAKEFILE
#---------------------------------------
${nm_stick_norm}_root := $nm_src_stick/
include $stick_makefile

END

done


if [ 0 -lt ${#nm_sticks} ]; then

	cat << END >> $NM_MAKEFILE

.PHONY: ${nm_sticks_build[@]} ${nm_sticks_test[@]}

build: ${nm_sticks_build[@]}

test: ${nm_sticks_test[@]}

END
  
fi
