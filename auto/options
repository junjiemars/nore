
help=no

NM_PREFIX=

NM_BIN_PATH=
NM_LIB_PATH=
NM_CONF_PATH=
NM_INC_PATH=
NM_LOG_PATH=
NM_PID_PATH=

CC=${CC:-"cc"}
CPP=
CAS=
AS=
LINK=


NM_OBJS=objs
NM_SRC=("src" ".")

NM_CROSS_BUILD=NO
NM_MACHINE_SPEC=

NM_SYMBOL=YES
NM_OPTIMIZE=NO
NM_WARN=YES
NM_ERROR=YES
NM_DEBUG=YES
NM_VERBOSE=NO
NM_STD=YES

CPU=${CPU}

NM_RPATH=NO

NM_PLATFORM=

NM_LIBATOMIC=NO

NM_CPU_CACHE_LINE=

NM_HAS_STICKS=()


for option
do
  opt="$opt `echo $option | sed -e \"s/\(--[^=]*=\)\(.* .*\)/\1'\2'/\"`"
  
  case "$option" in
    -*=*) value=`echo "$option" | sed -e 's/[-_a-zA-Z0-9]*=//'` ;;
    *) value="" ;;
  esac
  
  case "$option" in
    --help)                          help=yes                   	;;
    
    --prefix=*)                      NM_PREFIX="$value"         	;;
    --bin-path=*)                    NM_BIN_PATH="$value"       	;;
    --lib-path=*)                    NM_LIB_PATH="$value"  		  	;;
    --conf-path=*)                   NM_CONF_PATH="$value"      	;;
    --inc-path=*)                    NM_INC_PATH="$value"       	;;
    --pid-path=*)                    NM_PID_PATH="$value"       	;;
    --log-path=*)                    NM_LOG_PATH="$value"       	;;
    --user=*)                        NM_USER="$value"           	;;
    --group=*)                       NM_GROUP="$value"          	;;
    
    --src-dir=*)                     NM_SRC="$value"            	;;
    --build-dir=*)                   NM_OBJS="$value"           	;;

    --cross-build=*)                 NM_CROSS_BUILD="$value"     	;;
    --machine-spec=*)                NM_MACHINE_SPEC="$value"     ;;

		--without-symbol)                NM_SYMBOL=NO               	;;
		--without-debug)                 NM_DEBUG=NO                	;;
		--without-error)                 NM_ERROR=NO         	        ;;
		--with-warn=*)                   NM_WARN="$value"            	;;
		--with-optimize=*)               NM_OPTIMIZE="$value"        	;;
		--with-std=*)                    NM_STD="$value"            	;;
		--with-verbose)                  NM_VERBOSE=YES             	;;

		--has-*)                         NM_HAS_STICKS+=($option)   	;;
    
    *)
      echo "$0: error: invalid option \"$option\""
      exit 1
    ;;
  esac
done


NM_CONFIGURE="$opt"


if [ $help = yes ]; then


cat << END

  --help                             print this message

  --prefix=PATH                      set installation prefix
  --bin-path=PATH                    set bin pathname 
  --lib-path=PATH                    set lib pathname
  --conf-path=PATH                   set conf pathname
  --inc-path=PATH                    set inc pathname
  --pid-path=PATH                    set pid pathname
  --log-path=PATH                    set log pathname

  --src-dir=DIR                      set source directory
  --build-dir=DIR                    set build directory

  --cross-build=[YES|NO|]            set cross build option
  --machine-spec=SPEC                set machine spec

  --without-symbol                   disable CC generate debug symbols option
  --without-debug                    enable build for release option
  --without-error                    disable warn as error
  --with-warn=[YES|NO|*]             set CC warn level option 
  --with-optimize=[YES|NO|*]         set CC optimize level option 
  --with-std=[YES|NO|*]              set CC std option 
  --with-verbose                     enable verbose build option

  --has-*                            has [*] to do

END

  exit 1

fi


if [ -z "$NM_WARN" ]; then
	NM_WARN=YES
fi


if [ -z "$NM_OPTIMIZE" ]; then
	NM_OPTIMIZE=YES
fi


if [ -z "$NM_STD" ]; then
	NM_STD=YES
fi



NM_BIN_PATH=${NM_BIN_PATH:-bin}
NM_LIB_PATH=${NM_LIB_PATH:-lib}
NM_CONF_PATH=${NM_CONF_PATH:-conf}
NM_CONF_PREFIX=`dirname $NM_CONF_PATH`
NM_INC_PATH=${NM_INC_PATH:-inc}
NM_PID_PATH=${NM_PID_PATH:-log}
NM_LOG_PATH=${NM_LOG_PATH:-log}

