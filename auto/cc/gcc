#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## cc/gcc
####


nm_gcc_ver=`$CC -v 2>&1 | grep 'gcc version' 2>&1 \
                        | sed -e 's/^.* version \(.*\)/\1/'`

echo " + gcc version: $nm_gcc_ver"

NM_COMPILER="gcc $nm_gcc_ver"
have=NM_COMPILER value="\"$NM_COMPILER\"" . ${NORE_ROOT}/auto/define

. ${NORE_ROOT}/auto/cc/version
CC_VER=`version_n $(echo $nm_gcc_ver | cut -d' ' -f1)`
have=GCC value=$CC_VER . ${NORE_ROOT}/auto/define


# compiler 
[ "." = ".$CC" ] && CC="cc"

# preprocessor
[ "." = ".$CPP" ] && CPP="\$(CC)"

# assembler
[ "." = ".$AS" ] && AS="\$(CC)"

# archiver
[ "." = ".$AR" ] && AR="ar"


# std
std_opt='-std=' . ${NORE_ROOT}/auto/cc/std

# optimization
nm_optimize_opt=${nm_optimize_opt:-"-O2"}

# debug
nm_symbol_opt=${nm_symbol_opt:-"-g"}

# warning
nm_warn_opt=${nm_warn_opt:-"-Wall -Wextra"}

# error
nm_error_opt="-Werror"

# trigraph
nm_trigraph_opt="-trigraphs"

# verbose
nm_verbose_opt=${nm_verbose_opt:-"-v"}


# stage
nm_stage_pre="-E"
nm_stage_chk=
nm_stage_asm="-S"
nm_stage_c="-c"


# cpu
cpu_opt='-march=' . ${NORE_ROOT}/auto/cc/cpu

# link option
LDFLAGS="-L${NM_OUT}/lib${LDFLAGS:+ $LDFLAGS}"


# end of file
