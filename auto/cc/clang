
# clang

nm_clang_ver=`$CC -v 2>&1 | grep '\(clang\|LLVM\) version' 2>&1 \
                          | sed -e 's/^.* version \(.*\)/\1/'`

echo " + clang version: $nm_clang_ver"

NM_COMPILER="clang $nm_clang_ver"
have=NM_COMPILER value="\"$NM_COMPILER\"" . ${NM_HOME}auto/define

. ${NM_HOME}auto/cc/version
CC_VER=`version_n $(echo $nm_clang_ver | cut -d' ' -f1)`
have=CLANG value=$CC_VER . ${NM_HOME}auto/define


# compiler 
[ "." = ".$CC" ] && CC="cc"

# preprocess
[ "." = ".$CPP" ] && CPP="\$(CC)"

# assembly
[ "." = ".$CAS" ] && CAS="\$(CC)"

# assembler
[ "." = ".$AS" ] && AS="\$(CC)"

# archive
[ "." = ".$AR" ] && AR="ar"


# std
std_opt='-std=' . ${NM_HOME}auto/cc/std

# optimizations
nm_optimize_opt=${nm_optimize_opt:-"-O2"}

# symbol 
nm_symbol_opt=${nm_symbol_opt:-"-g"}

# error
nm_error_opt="-Werror"

# warnings (-Weverything)
nm_warn_opt=${nm_warn_opt:-"-Wall -Wextra"}

# verbose
nm_verbose_opt=${nm_verbose_opt:-"-v"}

# stage
nm_stage_pre="-E"
nm_stage_chk="-fsyntax-only"
nm_stage_asm="-S"
nm_stage_c="-c"


# cpu
cpu_opt='-march=' . ${NM_HOME}auto/cc/cpu
