
# msvc


nm_msvc_ver=`$CC 2>&1 | grep 'Compiler Version' 2>&1 \
                      | sed -e 's/^.* Version \(.*\)/\1/'`

echo " + msvc version: $nm_msvc_ver"

NM_COMPILER="msvc $nm_msvc_ver" 
have=NM_COMPILER value="\"msvc $nm_msvc_ver\"" . ${NM_HOME}auto/define


. ${NM_HOME}auto/cc/version
NM_COMPILER_VER=`version_n $(echo $nm_msvc_ver | cut -d' ' -f1)`
have=NM_COMPILER_VER value=$NM_COMPILER_VER . ${NM_HOME}auto/define


# preprocess
[ "." = ".$CPP" ] && CPP="\$(CC)"

# assembly
[ "." = ".$CAS" ] && CAS="\$(CC)"

# assembler
[ "." = ".$AS" ] && AS="ml"


# archive
[ "." = ".$AR" ] && AR="lib"


# optimize: -Og -Oi -Ot -Oy -Ob2 -Gs -GF -Gy
nm_optimize_opt=${nm_optimize_opt:-"-O2"}

# debug
nm_symbol_opt=${nm_symbol_opt:-"-Z7"}

# warnings
nm_warn_opt=${nm_warn_opt:-"-W4"}

# error
nm_error_opt="-WX"

# cl has no verbose option
nm_verbose_opt=${nm_verbose_opt:-""}

if [ "$NM_VERBOSE" == "NO" ]; then
	CC="${CC:+$CC }-nologo"
	AR="${AR:+$AR }-nologo"
fi


# pic option
nm_pic_opt=

# output options
cpp_out=">"
asm_out="-Fa"
obj_out="-Fo"
bin_out="-Fe"
ar_out="-out:"

# auto object output option
auto_out=$obj_out

# extensions
cpp_ext=".c"
asm_ext=".asm"
obj_ext=".obj"
lib_ext=".dll"
bin_ext=".exe"
ar_ext=".lib"


# MSVC 6.0 SP2                            cl 12.00
# MSVC Toolkit 2003 (7.1)                 cl 13.10
# MSVC 2005 Express Edition SP1 (8.0)     cl 14.00
# MSVC 2008 Express Edition (9.0)         cl 15.00
# MSVC 2010 (10.0)                        cl 16.00
# MSVC 2015 (14.0)                        cl 19.00



# msvc opt
nm_long_start='@<<
	'
nm_long_end='<<'
nm_long_regex_cont=' \
	'
nm_long_cont='
	'

# stage
nm_stage_pre="-E"
nm_stage_asm="-c"
nm_stage_c="-c"


