#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## cc/msvc
####


nm_msvc_ver=`$CC 2>&1 | grep 'Compiler Version' 2>&1 \
                      | sed -e 's/^.* Version \(.*\)/\1/'`

echo " + msvc version: $nm_msvc_ver"

NM_COMPILER="msvc $nm_msvc_ver"
have=NM_COMPILER value="\"$NM_COMPILER\"" . ${NORE_ROOT}/auto/define

. ${NORE_ROOT}/auto/cc/version
CC_VER=`version_n $(echo $nm_msvc_ver | cut -d' ' -f1)`
have=MSVC value=$CC_VER . ${NORE_ROOT}/auto/define


# compiler 
[ "." = ".$CC" ] && CC="cl"

# preprocess
[ "." = ".$CPP" ] && CPP="\$(CC)"

# assembler
[ "." = ".$AS" ] && AS="ml"

# archive
[ "." = ".$AR" ] && AR="lib"


# optimize: -Og -Oi -Ot -Oy -Ob2 -Gs -GF -Gy
case ".$NM_OPTIMIZE" in
	.NO)  nm_optimize_opt="-Od" ;;
	.YES) nm_optimize_opt="-O2" ;;
esac

# debug
nm_symbol_opt=${nm_symbol_opt:-"-Z7"}

# warnings (-Wall)
nm_warn_opt=${nm_warn_opt:-"-W4"}

# error
nm_error_opt="-WX"

# unicode
nm_utf_opt="-utf-8"

# trigraph
nm_trigraph_opt="-Zc:trigraphs"

# cl has no verbose option
nm_verbose_opt=
if [ "$NM_VERBOSE" = "NO" ]; then
	if [ ".$CXX" = ".$CC" ]; then
		CXX="${CC:+$CC }-nologo"
	fi
	CC="${CC:+$CC }-nologo"
	AR="${AR:+$AR }-nologo"
	AS="${AS:+$AS }-nologo"
fi

# flag
nm_flag_opt=

# model
nm_model_opt="-EHsc"


# output options
cpp_out=">"
asm_out="-FAu -Fa"
obj_out="-Fo"
bin_out="-Fe"
ar_out="-out:"

# auto object output option
auto_out=$obj_out

# extensions
cpp_ext=".c"
asm_ext=".asm"
obj_ext=".obj"
bin_ext=".exe"
ar_ext=".lib"


# cpu
cpu_opt='-arch:' . ${NORE_ROOT}/auto/cc/cpu


# stage
nm_stage_pre="-E"
nm_stage_asm="-c"
nm_stage_c="-c"


# link option
LDFLAGS="-link -libpath:${NM_OUT}/lib${LDFLAGS:+ $LDFLAGS}"


# end of file
