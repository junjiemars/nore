#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## os/nt
####

# lib
nm_shared_opt="-LD"
lib_ext=".dll"


have=$NM_SYSTEM . ${NORE_ROOT}/auto/have

nm_p="\;"

# os specifics for Windows

nm_feature="CPU cache line"
nm_feature_name='nm_cpu_cache_line'
nm_feature_run=dumb
nm_feature_h='#include <stdlib.h>
              #include <windows.h>
              #include <stdio.h>'
nm_feature_flags=
nm_feature_value=
nm_feature_test='
    size_t line = 0;
    DWORD buffer_size = 0;
    SYSTEM_LOGICAL_PROCESSOR_INFORMATION * buffer = 0;
    if (!GetLogicalProcessorInformation(0, &buffer_size)) return 1;
    buffer = malloc(buffer_size);
    if (!buffer) return 1;
    if (GetLogicalProcessorInformation(&buffer[0], &buffer_size)) {
      for (DWORD i = 0; i != buffer_size / sizeof(SYSTEM_LOGICAL_PROCESSOR_INFORMATION); ++i) {
        if (buffer[i].Relationship == RelationCache && buffer[i].Cache.Level == 1) {
          line = buffer[i].Cache.LineSize;
          break;
        }
      }
    }
    free(buffer);
    if (line) {
      printf("%d\n", line);
      return 0;
    }
    return 1;
'

. ${NORE_ROOT}/auto/feature

if [ ".yes" = ".$nm_found" ]; then
  NM_CPU_CACHE_LINE=$nm_feature_value
fi


# end of file
