#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## symbol
####

# bash support associated array
NM_ASSOCIATED_ARRAY_P=0
if [ 4 -le ${BASH_VERSINFO[0]} ]; then
	NM_ASSOCIATED_ARRAY_P=1
fi

# builtin symbol table
if [ 0 -lt $NM_ASSOCIATED_ARRAY_P ]; then
	declare -A NM_SYMBOL_TABLE=(
		[WINNT]=WINNT
		[LINUX]=LINUX
		[DARWIN]=DARWIN
		[MSVC]=MSVC
		[GCC]=GCC
		[CLANG]=CLANG
		[CC_NAME]=CC_NAME
		[CC_VER]=CC_VER
		[NM_SYSTEM]=NM_SYSTEM
		[NM_RELEASE]=NM_RELEASE
		[NM_MACHINE]=NM_MACHINE
		[NM_CPU_CACHE_LINE]=NM_CPU_CACHE_LINE
	)
else
	declare -a NM_SYMBOL_TABLE_NAME=(
		WINNT
		LINUX
		DARWIN
		MSVC
		GCC
		CLANG
		CC_NAME
		CC_VER
		NM_SYSTEM
		NM_RELEASE
		NM_MACHINE
		NM_CPU_CACHE_LINE
	)
	declare -a NM_SYMBOL_TABLE_VAL=($NM_SYMBOL_TABLE_NAME)
fi

load_symbol_table () {
	local sf="$1"
	local line=

	while IFS='' read -r line || [ -n "$line" ]; do
		IFS=':'; local kv=(${line//; }); unset IFS

		if [ 0 -lt $NM_ASSOCIATED_ARRAY_P ]; then
			if [ -n "${NM_SYMBOL_TABLE[${kv[0]}]}" ]; then
				NM_SYMBOL_TABLE[${kv[0]}]=${kv[1]}
			fi
		else
			for i in "${!NM_SYMBOL_TABLE_NAME[@]}"; do
				if [ "${kv[0]}" = "${NM_SYMBOL_TABLE_NAME[$i]}" ]; then
					NM_SYMBOL_TABLE_VAL[$i]=${kv[1]}
				fi
			done
		fi

	done < "$sf"
}

dump_symbol_table () {
	local df="$1"
	echo $echo_n > "$df$echo_c"

	if [ 0 -lt $NM_ASSOCIATED_ARRAY_P ]; then
		for k in "${!NM_SYMBOL_TABLE[@]}"; do
			echo "$k:${NM_SYMBOL_TABLE[$k]}" >> "$df"			
		done
	else
		for i in "${!NM_SYMBOL_TABLE_NAME[@]}"; do
			echo "${NM_SYMBOL_TABLE_NAME[$i]}:${NM_SYMBOL_TABLE_NAME[$i]}" >> "$df"
		done
	fi
}

symbol_value () {
	local n="$1"
	local v=

	if [ 0 -lt $NM_ASSOCIATED_ARRAY_P ]; then
		v="${NM_SYMBOL_TABLE[$n]}"
	else
		for i in "${!NM_SYMBOL_TABLE_NAME[@]}"; do
			if [ "$n" = "${NM_SYMBOL_TABLE_NAME[$i]}" ]; then
				v="${NM_SYMBOL_TABLE_VAL[$i]}"
				break
			fi
		done
	fi

	if [ -n "$v" ]; then
		echo "$v"
	else
		echo "$n"
	fi
}

# end of file
